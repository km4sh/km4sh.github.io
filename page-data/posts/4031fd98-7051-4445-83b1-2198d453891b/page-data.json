{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/4031fd98-7051-4445-83b1-2198d453891b","result":{"data":{"markdownRemark":{"id":"b8407dd4-11b0-5074-b5d1-a328d73d5235","html":"<p>自從Apple Silicon的M1芯片搭載到新型Mac電腦上以來，我們在基於Intel的Mac上面所編譯的程序則需要通過Rosetta工具來轉譯實現在Apple Silicon平臺上的運行。Xcode自從12版本以來，從底層的工具鏈到macOS應用的默認架構，都顯示出對Apple Silicion + Intel多架構編譯的友好支持。爲了避免轉譯造成的兼容性以及性能的影響，我們要更多的讓應用本地運行，而非依賴轉譯。而一個通用的二進制包含了在ARM（Apple Silicon）和x86_64（Intel）上都可本地運行的可執行代碼。</p>\n<p>這裏記錄的是對於深度學習庫<code class=\"language-text\">ncnn</code>的編譯。包括了單獨編譯可本地運行的x86<em>64、arm64以及Universal（x86</em>64 + arm64）版本的三種不同的庫。當然，如果只需要某一種編譯的話，可以直接編譯相應版本。</p>\n<p>最後的Universal部分有可直接編譯的方法，大家可以根據自己需求進行編譯。</p>\n<p>這個編譯過程是根據ncnn的Github CI流程來實現的。其中聲明了幾個CI風格的環境變量，但並沒有更改變量名稱。編譯後期需要注意區分其含義。</p>\n<p>在這一切之前，相對推薦將代碼庫切換至本文所寫時的版本。</p>\n<p>可以通過在<code class=\"language-text\">ncnn</code>代碼庫下使用下述指令來實現：</p>\n<p><code class=\"language-text\">git checkout 20210507</code></p>\n<hr>\n<h2 id=\"adding-openmp-and-vulkan-to-workspace\" style=\"position:relative;\"><a href=\"#adding-openmp-and-vulkan-to-workspace\" aria-label=\"adding openmp and vulkan to workspace permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Adding <code class=\"language-text\">OpenMP</code> and <code class=\"language-text\">Vulkan</code> to workspace</h2>\n<p>這裏寫明了編譯安裝OpenMP以及下載VulkanSDK的過程。注意，請修改<code class=\"language-text\">GITHUB_WORKSPACE</code>指向你的工作路徑。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">GITHUB_WORKSPACE</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>your_workspace<span class=\"token operator\">></span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">DEVELOPER_DIR</span><span class=\"token operator\">=</span>/Applications/Xcode.app/Contents/Developer/\n\n<span class=\"token comment\"># openmp</span>\n<span class=\"token builtin class-name\">cd</span> <span class=\"token variable\">$GITHUB_WORKSPACE</span>\n<span class=\"token function\">wget</span> https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/openmp-11.0.0.src.tar.xz\n<span class=\"token function\">tar</span> -xf openmp-11.0.0.src.tar.xz\n<span class=\"token builtin class-name\">cd</span> openmp-11.0.0.src\n<span class=\"token function\">sed</span> -i<span class=\"token string\">''</span> -e <span class=\"token string\">'/.size __kmp_unnamed_critical_addr/d'</span> runtime/src/z_Linux_asm.S\n<span class=\"token function\">sed</span> -i<span class=\"token string\">''</span> -e <span class=\"token string\">'s/__kmp_unnamed_critical_addr/___kmp_unnamed_critical_addr/g'</span> runtime/src/z_Linux_asm.S\n<span class=\"token function\">mkdir</span> -p build <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> build\ncmake -DCMAKE_BUILD_TYPE<span class=\"token operator\">=</span>Release -DCMAKE_INSTALL_PREFIX<span class=\"token operator\">=</span>install -DCMAKE_OSX_ARCHITECTURES<span class=\"token operator\">=</span><span class=\"token string\">\"x86_64;arm64\"</span> <span class=\"token punctuation\">\\</span>\n    -DLIBOMP_ENABLE_SHARED<span class=\"token operator\">=</span>OFF -DLIBOMP_OMPT_SUPPORT<span class=\"token operator\">=</span>OFF -DLIBOMP_USE_HWLOC<span class=\"token operator\">=</span>OFF <span class=\"token punctuation\">..</span>\ncmake --build <span class=\"token builtin class-name\">.</span> -j <span class=\"token number\">2</span>\ncmake --build <span class=\"token builtin class-name\">.</span> --target <span class=\"token function\">install</span>\n<span class=\"token function\">mkdir</span> <span class=\"token variable\">$GITHUB_WORKSPACE</span>/openmp-install\n<span class=\"token function\">cp</span> -r install/* <span class=\"token variable\">$GITHUB_WORKSPACE</span>/openmp-install\n\n<span class=\"token comment\"># install openmp</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">cp</span> <span class=\"token variable\">$GITHUB_WORKSPACE</span>/openmp-install/include/* <span class=\"token variable\">$DEVELOPER_DIR</span>/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include\n<span class=\"token function\">sudo</span> <span class=\"token function\">cp</span> <span class=\"token variable\">$GITHUB_WORKSPACE</span>/openmp-install/lib/libomp.a <span class=\"token variable\">$DEVELOPER_DIR</span>/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib\n\n<span class=\"token comment\"># vulkansdk</span>\n<span class=\"token builtin class-name\">cd</span> <span class=\"token variable\">$GITHUB_WORKSPACE</span>  <span class=\"token comment\"># change dir to a more accurate path.</span>\n<span class=\"token function\">wget</span> https://sdk.lunarg.com/sdk/download/1.2.162.0/mac/vulkansdk-macos-1.2.162.0.dmg?Human<span class=\"token operator\">=</span>true -O vulkansdk-macos-1.2.162.0.dmg\nhdiutil attach vulkansdk-macos-1.2.162.0.dmg\n<span class=\"token function\">cp</span> -r /Volumes/vulkansdk-macos-1.2.162.0 <span class=\"token builtin class-name\">.</span>\n<span class=\"token function\">rm</span> -rf vulkansdk-macos-1.2.162.0/Applications\n<span class=\"token function\">find</span> vulkansdk-macos-1.2.162.0 -type f <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -v -E <span class=\"token string\">'vulkan|glslang|MoltenVK'</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> <span class=\"token function\">rm</span>\nhdiutil detach /Volumes/vulkansdk-macos-1.2.162.0</code></pre></div>","fields":{"slug":"/posts/4031fd98-7051-4445-83b1-2198d453891b","tagSlugs":["/tag/ncnn/","/tag/universal/"]},"frontmatter":{"date":"2021-05-30T06:54:00.121Z","description":"macOS上对App的编译自从Xcode 12以来就默认要求Universal了。但是我在使用ncnn的时候发现了一些可能会出错的前置库架构，所以根据ncnn的Github Workflow改了一下编译流程，在此记录。","tags":["ncnn","universal"],"title":"Apple語境中x86_64/arm64以及Universal的ncnn編譯","socialImage":null}}},"pageContext":{"slug":"/posts/4031fd98-7051-4445-83b1-2198d453891b"}},"staticQueryHashes":["251939775","401334301","825871152"]}